/*===-- Main Page ----------------------------------------------*- C -*-===*//**
 *
 * \mainpage
 * [TOC]
 *
 * # C                                                                     {#sC}
 *
 * [*ISO/IEC JTC1/SC22/WG14 - C*](http://open-std.org/jtc1/sc22/wg14/)
 *
 * [*C17*](https://iso.org/standard/74528.html) (2017)
 * [*C11*](https://iso.org/standard/57853.html) (2011)
 * [*C99*](https://iso.org/standard/29237.html) (1999)
 * [*C90*](https://iso.org/standard/17782.html) (1990)
 * *ANSI C* (1989)
 * *K&R C* (1978)
 * *C* (1972)
 *
 * ["C (programming language) Uses"](https://wikipedia.org/wiki/C_(programming_language)#Uses). *Wikipedia*.
 * ["Why does C programming suck?"](https://quora.com/Why-does-C-programming-suck). *Quora*.
 *
 * # References                                                   {#sReferences}
 *
 * ["C and C++ Language Syntax Reference"](https://cprogramming.com/reference). *Cprogramming.com*.
 * ["C Language Reference"](https://docs.microsoft.com/cpp/c-language/c-language-reference). *Microsoft Docs*.
 * ["C reference"](http://cppreference.com/w/c). *cppreference.com*.
 * [*comp.lang.c Frequently Asked Questions*](http://c-faq.com/)
 * [*The GNU C Reference Manual*](https://gnu.org/software/gnu-c-manual/gnu-c-manual.html)

 * # Styles                                                           {#sStyles}
 *
 * [*GNU Coding Standards*](https://gnu.org/prep/standards/standards.html)
 * [*Linux kernel coding style*](https://github.com/torvalds/linux/blob/master/Documentation/process/coding-style.rst)
 * [*NGINX coding style*](https://nginx.com/resources/wiki/start/topics/examples/coding_style)
 * [*PostgreSQL Coding Conventions*](https://postgresql.org/docs/current/static/source.html)
 * [*SEI CERT C Coding Standard*](https://wiki.sei.cmu.edu/confluence/display/c)
 *
 * ## Naming                                                         {#ssNaming}
 *
 * 对于数据，倾向于紧凑的命名：`name_t itemname;` / `name_t nameof(id_t id);`
 *
 * 对于指令，倾向于明确的命名：`errno_t cut_off_power_of(device_t device);`
 *
 * | Entity Kinds | Preview       |  | l/g          | a/r/t/s/e      | c-v                  | Preview         |
 * |:------------ |:------------- |  |:------------ |:-------------- |:-------------------- | ---------------:|
 * | folder       | `all_lower`   |  | local        | [`auto`]       | [`const`]            |     `all_lower` |
 * | file         | `all_lower`   |  | local        | [`auto`]       | [`const`] `volatile` |   `v_all_lower` |
 * | macro        | `ALL_UPPER`   |  | local        | `register`     |                      |   `r_all_lower` |
 * | typedef      | `all_lower_t` |  | local        | `thread_local` |                      |   `t_all_lower` |
 * | struct       | `all_lower_t` |  | local/global | `static`       |                      |   `s_all_lower` |
 * | struct field | `all_lower`   |  | local/global | `static`       | `const`              |     `ALL_UPPER` |
 * | enum         | `all_lower_t` |  | local/global | `static`       | [`const`] `volatile` |  `sv_all_lower` |
 * | enumerator   | `ALL_UPPER`   |  | global       | [`extern`]     |                      |   `g_all_lower` |
 * | union        | `all_lower_t` |  | global       | [`extern`]     | `const`              |     `ALL_UPPER` |
 * | union member | `all_lower`   |  | global       | [`extern`]     | [`const`] `volatile` |  `gv_all_lower` |
 * | function     | `all_lower`   |  |              |                |                      |                 |
 *
 * ## Formatting                                                 {#ssFormatting}
 *
 * `.h` `.c`
 * UTF-8
 * 80 columns × 24 lines
 * 1 tab (8 characters)
 * K&R (functions are special)
 *
 * # Guides                                                           {#sGuides}
 *
 * *C Interfaces and Implementations: Techniques for Creating Reusable Software*. 1997. David R. Hanson.
 * *C Programming: A Modern Approach.* 1st ed. 1996; [2nd ed.](http://knking.com/books/c2) 2008. K. N. King.
 * *C Traps and Pitfalls*. 1989. Andrew Koenig.
 * *Expert C Programming: Deep C Secrets*. 1994. Peter van der Linden.
 * [*Implementing Exceptions in C*](http://hpl.hp.com/techreports/Compaq-DEC/SRC-RR-40.pdf). 1989. Eric. S. Roberts.
 * *Pointers on C*. 1997. Kenneth Reek.
 * [*The C Library Reference Guide*](https://www-s.acm.illinois.edu/webmonkeys/book/c_guide). 1997. Eric Huss.
 * *The C Programming Language*. 1st ed. 1978; 2nd ed. 1988. Brian Kernighan; Dennis Ritchie.
 * *The Standard C Library*. 1992. P. J. Plauger.
 *
 * # Awesome                                                         {#sAwesome}
 *
 * [*Awesome C*](https://notabug.org/koz.ross/awesome-c)
 *
 * [*Check*](https://libcheck.github.io/check)
 *
 * ___
 * <a rel="license" href="http://creativecommons.org/licenses/by/4.0/"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by/4.0/88x31.png" /></a><br />本作品采用<a rel="license" href="http://creativecommons.org/licenses/by/4.0/">知识共享署名 4.0 国际许可协议</a>进行许可。
 *
 * \version 2018-08-07
 * \since 2018-01-23
 * \authors zhengrr
 * \copyright CC BY 4.0
 *
*//*===--------------------------------------------------------------------===*/

/*===-- C Reference --------------------------------------------*- C -*-===*//**
 *
 * \defgroup gRef C参考手册
 *
 * \sa ["C reference"](http://cppreference.com/w/c). *cppreference.com*.
 *     + [Language](http://en.cppreference.com/w/c/language)
 *     + [Headers](http://en.cppreference.com/w/c/header)
 *     + [Type support](http://en.cppreference.com/w/c/types)
 *     + [Program utilities](http://en.cppreference.com/w/c/program)
 *     + [Variadic functions](http://en.cppreference.com/w/c/variadic)
 *     + [Error handling](http://en.cppreference.com/w/c/error)
 *     + [Dynamic memory management](http://en.cppreference.com/w/c/memory)
 *     + [Date and time utilities](http://en.cppreference.com/w/c/chrono)
 *     + [Strings library](http://en.cppreference.com/w/c/string)
 *     + [Algorithms](http://en.cppreference.com/w/c/algorithm)
 *     + [Numerics](http://en.cppreference.com/w/c/numeric)
 *     + [Input/output support](http://en.cppreference.com/w/c/io)
 *     + [Localization support](http://en.cppreference.com/w/c/locale)
 *     + [Atomic operations library](http://en.cppreference.com/w/c/atomic)
 *     + [Thread support library](http://en.cppreference.com/w/c/thread)
 *
 * \version 2018-04-25
 * \since 2018-01-23
 * \authors zhengrr
 * \copyright CC BY 4.0
 *
*//*===--------------------------------------------------------------------===*/
