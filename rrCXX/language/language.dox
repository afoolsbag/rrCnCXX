//===-- C++ Language --------------------------------------------*- C++ -*-===//
///
/// \defgroup groupLanguage C++ 语言
/// \ingroup groupRrCxx
///
/// \ref pageLanguage
///
/// \sa <https://zh.cppreference.com/w/cpp/language>
///
/// \version 2020-01-09
/// \since 2018-01-23
/// \authors zhengrr
/// \copyright CC0-1.0
///
//===----------------------------------------------------------------------===//

//===-- C++ Language Topics -------------------------------------*- C++ -*-===//
///
/// \page pageLanguage C++ 语言议题
/// \tableofcontents
///
/// \ref groupLanguage
///
/// ___________________________________
/// \section sectionReturnVsExitVsAbort 主函数中 return、exit 和 abort 的差异
///
/// `exit` 不会触发函数中局部对象的析构, 但静态对象与全局对象不受影响；
///
/// `abort` 不会触发任何对象的析构，包括局部、静态、和全局对象。
///
/// \sa <https://stackoverflow.com/questions/461449/return-statement-vs-exit-in-main>
///
/// ___________________________________
/// \section sectionReturnValueAndError 返回值和错误
///
/// 返回值表示函数完成了所承诺功能，并返回所求值；
/// 错误表示函数无法完成所承诺功能：
///
/// *   允许使用异常时，使用 `return` 返回值，使用 `throw` 抛出错误；
/// *   无法使用异常时，使用 `return pair<status, value>` 返回状态和值；
/// *   无法使用对值时，使用 `return status` 返回状态，使用传入指针返回值。
///
/// \remarks I.10: 使用异常来表明无法实施所要求的任务
///
/// \sa [*C++C.G. I.10*](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Ri-except)
///
/// ___________________
/// \version 2020-01-09
/// \since 2018-01-23
/// \authors zhengrr
/// \copyright CC0-1.0
///
//===----------------------------------------------------------------------===//
