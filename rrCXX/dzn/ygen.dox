/**
 * \defgroup g_dzn_patterns 设计模式
 *
 * \author zhengrr
 * \date 2018-1-29
 * \copyright The MIT License
 */

/**
 * \page p_dzn_patterns 设计模式话题
 * \tableofcontents
 *
 * -----------------------
 * \section s_cxx_and_dclp C++ 和 DCLP 的风险
 *
 * 若非必要，建议使用提前初始化单例模式，其无需互斥锁；
 * 若有必要，延迟初始化应直接用锁，而非双重检查锁，且在调用时善用变量缓存，减少访问。
 *
 * **为什么反对使用双重检查锁？**
 *
 * 简言之，C++抽象机是单线程的，天性不支持多线程，双重检查锁无法保证线程安全。
 *
 * **议题：为什么直接使用锁可以认为是线程安全的？**
 *
 * C++线程库会借助于超出C++语言范畴的方式，来确保线程安全（如嵌入汇编指令）。
 *
 * \sa ["C++ 和 DCLP 的风险"](http://blog.jobbole.com/86392). *伯乐在线*.
 */
